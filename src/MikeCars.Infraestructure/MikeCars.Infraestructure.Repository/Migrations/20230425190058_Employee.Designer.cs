// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MikeCars.Infraestructure.Repository.Context;

#nullable disable

namespace MikeCars.Infraestructure.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230425190058_Employee")]
    partial class Employee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.AgenteModel", b =>
                {
                    b.Property<int>("AgenteModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("[id]");

                    b.Property<int>("IdContatoInfoModel")
                        .HasColumnType("int")
                        .HasColumnName("[id-contato-info]");

                    b.Property<int>("IdDocumentoModel")
                        .HasColumnType("int")
                        .HasColumnName("[id-documento]");

                    b.Property<int>("IdEnderecoModel")
                        .HasColumnType("int")
                        .HasColumnName("[id-endereco]");

                    b.Property<int>("IdPessoaFisicaModel")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoAgente")
                        .HasColumnType("int")
                        .HasColumnName("[id-tipo-agente]");

                    b.HasKey("AgenteModeId")
                        .HasName("[pk-agente]");

                    b.HasIndex("AgenteModeId")
                        .IsUnique()
                        .HasDatabaseName("[idx-agente]");

                    b.ToTable("[t-agente]", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.ContatoInfoModel", b =>
                {
                    b.Property<int>("ContatoInfoModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("[id]");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContatoInfoModelId"));

                    b.Property<string>("Email")
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("[email]");

                    b.Property<int>("IdAgente")
                        .HasColumnType("int");

                    b.Property<string>("TelefoneCelular")
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("[celular]");

                    b.Property<string>("TelefoneResidencial")
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("[telefone-residencia]");

                    b.HasKey("ContatoInfoModelId")
                        .HasName("[pk-contato-info]");

                    b.ToTable("[t-contato-info]", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.DocumentoModel", b =>
                {
                    b.Property<int>("DocumentoModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("[id]");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentoModelId"));

                    b.Property<int>("IdAgente")
                        .HasColumnType("int")
                        .HasColumnName("[id-agente]");

                    b.Property<int>("IdTipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("[id-tipo-documento]");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar")
                        .HasColumnName("documento");

                    b.HasKey("DocumentoModelId")
                        .HasName("[pk-documento]");

                    b.HasIndex("DocumentoModelId")
                        .HasDatabaseName("[idx-id-documento]");

                    b.HasIndex("Numero")
                        .HasDatabaseName("[idx-numero-documento]");

                    b.ToTable("[t-documento]", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.EnderecoModel", b =>
                {
                    b.Property<int>("EnderecoModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("[id]");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoModelId"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(45)
                        .HasColumnType("varchar")
                        .HasColumnName("[bairro]");

                    b.Property<string>("Cidade")
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("[cidade]");

                    b.Property<int>("IdAgente")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoEndereco")
                        .HasColumnType("int")
                        .HasColumnName("[id-tipo-endereco]");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar")
                        .HasColumnName("[logradouro]");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("[numero]");

                    b.Property<string>("PontoReferencia")
                        .HasMaxLength(225)
                        .HasColumnType("varchar")
                        .HasColumnName("[ponto-referencia]");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("varchar")
                        .HasColumnName("[uf]");

                    b.HasKey("EnderecoModelId")
                        .HasName("[pk-endereco]");

                    b.ToTable("[t-endereco]", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.PessoaFisicaModel", b =>
                {
                    b.Property<int>("PessoaFisicaModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("[id]");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PessoaFisicaModelId"));

                    b.Property<int>("IdAgenteModel")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime")
                        .HasColumnName("[nascimento]");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("[nome]");

                    b.HasKey("PessoaFisicaModelId")
                        .HasName("[id-pessoa]");

                    b.HasIndex("PessoaFisicaModelId")
                        .HasDatabaseName("[dx-pessoa-fisica]");

                    b.ToTable("[t-pessoa-fisica]", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.AgenteModel", b =>
                {
                    b.HasOne("MikeCars.Infraestructure.Repository.Models.ContatoInfoModel", "ContatoInfoModel")
                        .WithOne("AgenteModel")
                        .HasForeignKey("MikeCars.Infraestructure.Repository.Models.AgenteModel", "AgenteModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MikeCars.Infraestructure.Repository.Models.DocumentoModel", "DocumentoModel")
                        .WithOne("AgenteModel")
                        .HasForeignKey("MikeCars.Infraestructure.Repository.Models.AgenteModel", "AgenteModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MikeCars.Infraestructure.Repository.Models.EnderecoModel", "EnderecoModel")
                        .WithOne("AgenteModel")
                        .HasForeignKey("MikeCars.Infraestructure.Repository.Models.AgenteModel", "AgenteModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MikeCars.Infraestructure.Repository.Models.PessoaFisicaModel", "PessoaFisicaModel")
                        .WithOne("AgenteModel")
                        .HasForeignKey("MikeCars.Infraestructure.Repository.Models.AgenteModel", "AgenteModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContatoInfoModel");

                    b.Navigation("DocumentoModel");

                    b.Navigation("EnderecoModel");

                    b.Navigation("PessoaFisicaModel");
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.ContatoInfoModel", b =>
                {
                    b.Navigation("AgenteModel")
                        .IsRequired();
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.DocumentoModel", b =>
                {
                    b.Navigation("AgenteModel")
                        .IsRequired();
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.EnderecoModel", b =>
                {
                    b.Navigation("AgenteModel")
                        .IsRequired();
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.PessoaFisicaModel", b =>
                {
                    b.Navigation("AgenteModel")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
