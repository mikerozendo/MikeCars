// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MikeCars.Infraestructure.Repository.Context;

#nullable disable

namespace MikeCars.Infraestructure.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230426223004_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.AgenteModel", b =>
                {
                    b.Property<int>("AgenteModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgenteModelId"));

                    b.Property<int>("IdContatoinfoModel")
                        .HasColumnType("int")
                        .HasColumnName("IdContatoInfo");

                    b.Property<int>("IdDocumentoModel")
                        .HasColumnType("int")
                        .HasColumnName("IdDocumento");

                    b.Property<int>("IdEnderecoModel")
                        .HasColumnType("int")
                        .HasColumnName("IdEndereco");

                    b.Property<int?>("IdPessoaFisicaModel")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoAgente")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoAgente");

                    b.HasKey("AgenteModelId")
                        .HasName("pkAgente");

                    b.HasIndex("AgenteModelId")
                        .HasDatabaseName("idxAgente");

                    b.ToTable("Agente", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.ContatoInfoModel", b =>
                {
                    b.Property<int>("ContatoInfoModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContatoInfoModelId"));

                    b.Property<string>("Email")
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<int>("IdAgente")
                        .HasColumnType("int");

                    b.Property<string>("TelefoneCelular")
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("Celular");

                    b.Property<string>("TelefoneResidencial")
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("TelefoneResidencial");

                    b.HasKey("ContatoInfoModelId")
                        .HasName("PkContatoInfo");

                    b.HasIndex("IdAgente")
                        .IsUnique();

                    b.ToTable("ContatoInfo", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.DocumentoModel", b =>
                {
                    b.Property<int>("DocumentoModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentoModelId"));

                    b.Property<int>("IdAgente")
                        .HasColumnType("int")
                        .HasColumnName("IdAgente");

                    b.Property<int>("IdTipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoDocumento");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar")
                        .HasColumnName("Numero");

                    b.HasKey("DocumentoModelId")
                        .HasName("PkDocumento");

                    b.HasIndex("DocumentoModelId")
                        .HasDatabaseName("idxiddocumento");

                    b.HasIndex("IdAgente")
                        .IsUnique();

                    b.HasIndex("Numero")
                        .HasDatabaseName("idxnumerodocumento");

                    b.ToTable("Documento", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.EnderecoModel", b =>
                {
                    b.Property<int>("EnderecoModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoModelId"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Bairro");

                    b.Property<string>("Cidade")
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Cidade");

                    b.Property<int>("IdAgente")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoEndereco")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoEndereco");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Logradouro");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("Numero");

                    b.Property<string>("PontoReferencia")
                        .HasMaxLength(225)
                        .HasColumnType("varchar")
                        .HasColumnName("PontoReferencia");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("varchar")
                        .HasColumnName("Uf");

                    b.HasKey("EnderecoModelId")
                        .HasName("pkendereco");

                    b.HasIndex("IdAgente")
                        .IsUnique();

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.PessoaFisicaModel", b =>
                {
                    b.Property<int>("PessoaFisicaModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PessoaFisicaModelId"));

                    b.Property<int>("IdAgenteModel")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime")
                        .HasColumnName("Nascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nome");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Sobrenome");

                    b.HasKey("PessoaFisicaModelId")
                        .HasName("IdPessoa");

                    b.HasIndex("IdAgenteModel")
                        .IsUnique();

                    b.HasIndex("PessoaFisicaModelId")
                        .HasDatabaseName("idxpessoafisica");

                    b.ToTable("PessoaFisica", (string)null);
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.ContatoInfoModel", b =>
                {
                    b.HasOne("MikeCars.Infraestructure.Repository.Models.AgenteModel", "AgenteModel")
                        .WithOne("ContatoInfoModel")
                        .HasForeignKey("MikeCars.Infraestructure.Repository.Models.ContatoInfoModel", "IdAgente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgenteModel");
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.DocumentoModel", b =>
                {
                    b.HasOne("MikeCars.Infraestructure.Repository.Models.AgenteModel", "AgenteModel")
                        .WithOne("DocumentoModel")
                        .HasForeignKey("MikeCars.Infraestructure.Repository.Models.DocumentoModel", "IdAgente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgenteModel");
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.EnderecoModel", b =>
                {
                    b.HasOne("MikeCars.Infraestructure.Repository.Models.AgenteModel", "AgenteModel")
                        .WithOne("EnderecoModel")
                        .HasForeignKey("MikeCars.Infraestructure.Repository.Models.EnderecoModel", "IdAgente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgenteModel");
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.PessoaFisicaModel", b =>
                {
                    b.HasOne("MikeCars.Infraestructure.Repository.Models.AgenteModel", "AgenteModel")
                        .WithOne("PessoaFisicaModel")
                        .HasForeignKey("MikeCars.Infraestructure.Repository.Models.PessoaFisicaModel", "IdAgenteModel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgenteModel");
                });

            modelBuilder.Entity("MikeCars.Infraestructure.Repository.Models.AgenteModel", b =>
                {
                    b.Navigation("ContatoInfoModel");

                    b.Navigation("DocumentoModel");

                    b.Navigation("EnderecoModel");

                    b.Navigation("PessoaFisicaModel");
                });
#pragma warning restore 612, 618
        }
    }
}
